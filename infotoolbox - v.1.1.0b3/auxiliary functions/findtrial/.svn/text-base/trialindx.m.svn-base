function indx = trialindx(Nt, maxNt, Ns)

%TRIALINDX Indexes of responses corresponding to trials.
%
% USAGE
% -----
%
%   indx = trialindx(Nt, maxNT, Ns)
%
% INPUT
% -----
%   NT    - number of trials per stimulus array.
%   MAXNT - max number of trials (must be equal to max(NT) and size(NT,2))
%   NS    - number of stimuli (must be equal to length(NT))
%
% OUTPUT
% ------
% TRIALINDX returns the position of the trials in the response matrix R
% (see ENTROPY and INFORMATION) ignoring the first dimension
% (dimensionality of the response).
%
% EXAMPLE
% -------
% Let's consider the response matrix in the figure below:
%
%                             ----------------- 
%                             | o | q | s | - |
%                             |---------------|
%                             | p | r | t | - |
%                             -----------------
%                        -----------------        /
%                        | i | m | - | - |       /
%                        |---------------|      /
%                        | l | n | - | - |     / 
%                        -----------------    /
%              |    -----------------        / S=3
%              |    | a | c | e | g |       /
%          L=2 |    |---------------|      /
%              |    | b | d | f | h |     /
%              |    -----------------    /
%      
%                   -----------------
%                          T=4
%
% in this case L=2, T=4 and S=3. Four trials are availabe for the first
% stimulus, two for the second and three for the third stimulus. We have
% Nt = [4; 3; 2] and maxNt = 4 and thus
%
%         indx = tridxs([4; 3; 2], 4, 3)
% 
%         indx =
% 
%              1
%              2
%              3
%              4
%              5
%              6
%              7
%              9
%             10
%
% The indexes computed this way can be used to extract all the responses
% corresponding to trials by means of the command
%         
%          R(:,indx) = 
%
%              a      c      e      g      i      m      o      q      s
%              b      d      f      h      l      n      p      r      t
%
% REMARKS
% -------
% The inputs are obviously redundant since all the information required for
% the computation is contained in NT. However, by passing the additional
% arguments we can speed up things a bit.

% Copyright (C) 2009 Cesare Magri
% Version: 1.0.0

% -------
% LICENSE
% -------
% This software is distributed free under the condition that:
%
% 1. it shall not be incorporated in software that is subsequently sold;
%
% 2. the authorship of the software shall be acknowledged and the following
%    article shall be properly cited in any publication that uses results
%    generated by the software:
%
%      Magri C, Whittingstall K, Singh V, Logothetis NK, Panzeri S: A
%      toolbox for the fast information analysis of multiple-site LFP, EEG
%      and spike train recordings. BMC Neuroscience 2009 10(1):81;
%
% 3.  this notice shall remain in place in each source file.

one2maxNt = (1:maxNt);
indx = find((one2maxNt(ones(Ns,1),:)<=Nt(:, ones(maxNt,1))).');